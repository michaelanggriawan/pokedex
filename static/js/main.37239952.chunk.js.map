{"version":3,"sources":["graphql/client/client.js","constant/config.js","utils/globalFunction.js","graphql/query/pokemons.js","styles/styles.js","pages/PokemonListPage.js","components/button.js","pages/PokemonDetailPage.js","pages/MyPokemonListPage.js","assets/img/arrowLeft.svg","components/header.js","components/footer.js","App.js","reportWebVitals.js","index.js"],"names":["client","ApolloClient","uri","cache","InMemoryCache","toCamelCase","p","toUpperCase","slice","POKEMON_LIST","gql","POKEMON_DETAIL","MY_POKEMON_LIST","Container","styled","div","Header","header","Loading","ContainerCard","Card","Back","PokemonDetail","Footer","footer","Button","button","PokemonListPage","history","useHistory","useQuery","variables","limit","offset","loading","data","ownedTotal","error","id","owned","readQuery","query","pokemons","filter","mp","length","results","map","pokemon","index","onClick","push","pathname","name","state","image","src","props","children","PokemonDetailPage","location","useLocation","useState","probability","setProbability","split","pokemonName","prompt","oldData","writeQuery","forEach","pk","className","height","style","textAlign","weight","abilities","ab","ability","base_experience","moves","move","MyPokemonListPage","color","marginTop","Navbar","title","toLowerCase","goBack","ArrowLeftIcon","to","App","Client","HashRouter","exact","path","component","MyPokemonDetailPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37239952.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache } from '@apollo/client';\r\nimport Config from '../../constant/config';\r\n\r\nconst client = new ApolloClient({\r\n\turi: Config.API_ENDPOINT,\r\n\tcache: new InMemoryCache(),\r\n});\r\n\r\nexport default client;\r\n","export default {\r\n\tAPI_ENDPOINT: 'https://graphql-pokeapi.vercel.app/api/graphql',\r\n};\r\n","export function toCamelCase(p) {\r\n  return p[0].toUpperCase() + p.slice(1,);\r\n}","import { gql } from '@apollo/client';\r\n\r\nexport const POKEMON_LIST = gql`\r\n  query pokemons($limit: Int, $offset: Int) {\r\n    pokemons(limit: $limit, offset: $offset) {\r\n      count\r\n      next\r\n      previous\r\n      status\r\n      message\r\n      results {\r\n        url\r\n        name\r\n        image\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const POKEMON_MOVE = gql`\r\n\tquery move($move: String!) {\r\n\t\tmove(move: $move) {\r\n\t\t\tresponse\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport const POKEMON_DETAIL = gql`\r\n  query pokemon($name: String!) {\r\n    pokemon(name: $name) {\r\n      base_experience\r\n      abilities {\r\n        ability {\r\n          url\r\n          name\r\n        }\r\n      }\r\n      name\r\n      height\r\n      weight\r\n      status\r\n      stats {\r\n        base_stat\r\n        effort\r\n        stat {\r\n          url\r\n          name\r\n        }\r\n      }\r\n      moves {\r\n        move {\r\n          name\r\n          url\r\n        }\r\n      }\r\n      types {\r\n        type {\r\n          name\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MY_POKEMON_LIST = gql`\r\n  query MyPokemon {\r\n    pokemons {\r\n      id\r\n      name\r\n      image\r\n    }\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  background-color: #fff;\r\n  height: 100vh;\r\n  max-width: 465px;\r\n  margin: 0 auto;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  -ms-overflow-style: none; /* IE and Edge */\r\n  scrollbar-width: none; /* Firefox */\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  background-color: #fff;\r\n  box-shadow: 0px 1px 8px rgba(0, 0, 0, 0.08);\r\n  width: 465px;\r\n  height: 53px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #f15a29;\r\n  position: fixed;\r\n\r\n  @media (max-width: 500px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Loading = styled.div`\r\n  width: 50px;\r\n  height: 50px;\r\n  border: solid 5px #ccc;\r\n  border-top-color: #f15a29;\r\n  border-radius: 100px;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: 999;\r\n  overflow: show;\r\n  bottom: 0;\r\n  margin: auto;\r\n  animation: loadCircle 2s linear infinite;\r\n\r\n  @keyframes loadCircle {\r\n    from {\r\n      transform: rotate(0deg);\r\n    }\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ContainerCard = styled.div`\r\n  margin-top: 70px;\r\n  display: grid;\r\n  grid-template-columns: auto auto auto;\r\n  grid-column-gap: 5px;\r\n  grid-row-gap: 20px;\r\n  justify-items: center;\r\n  margin-bottom: 80px;\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  width: 90%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background: #fff;\r\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.2);\r\n  color: #f15a29;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: #f15a29;\r\n    color: #fff;\r\n  }\r\n\r\n  @media (max-width: 375px) {\r\n    width: 80%;\r\n    font-size: 10px;\r\n  }\r\n`;\r\n\r\nexport const Back = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  left: 0;\r\n  margin-left: 20px;\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const PokemonDetail = styled.div`\r\n  margin-top: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  color: #f15a29;\r\n\r\n  img {\r\n    width: 140px;\r\n    height: 140px;\r\n  }\r\n\r\n  .label {\r\n    background-color: #f15a29;\r\n    height: 32px;\r\n    width: 90%;\r\n\r\n    span {\r\n      padding-top: 4px;\r\n      color: #fff;\r\n      margin-left: 10px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n    }\r\n  }\r\n\r\n  .section {\r\n    color: #fff;\r\n    width: 90%;\r\n    .monster-profile {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr 1fr 1fr;\r\n      color: #f15a29;\r\n      margin-bottom: 10px;\r\n    }\r\n\r\n    .ability {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n  }\r\n\r\n  .monster-move {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    width: 90%;\r\n    grid-gap: 10px;\r\n  }\r\n`;\r\n\r\nexport const Footer = styled.footer`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  position: fixed;\r\n  width: 465px;\r\n  height: 53px;\r\n  background: #fff;\r\n  box-shadow: 0 -2px 2px 0 rgba(0, 0, 0, 0.1), 0 -2px 1px 0 rgba(0, 0, 0, 0.06);\r\n  bottom: 0;\r\n  align-items: center;\r\n\r\n  .link {\r\n    color: #f15a29;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .line-up {\r\n    height: 53px;\r\n    border: 0.5px solid #f15a29;\r\n  }\r\n\r\n  @media (max-width: 500px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  background-color: #f15a29;\r\n  color: #fff;\r\n  width: 30%;\r\n  height: 30px;\r\n  border-radius: 5px;\r\n  border: 0;\r\n  margin-top: 20px;\r\n  margin-bottom: 20px;\r\n\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import { useQuery } from '@apollo/client';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toCamelCase } from '../utils/globalFunction';\r\nimport client from '../graphql/client/client';\r\nimport { POKEMON_LIST, MY_POKEMON_LIST } from '../graphql/query/pokemons';\r\n\r\nimport { Loading, Card, ContainerCard } from '../styles/styles';\r\n\r\nfunction PokemonListPage() {\r\n  const history = useHistory();\r\n  const { loading, data, error } = useQuery(POKEMON_LIST, {\r\n    variables: {\r\n      limit: 200,\r\n      offset: 1,\r\n    },\r\n  });\r\n\r\n  const ownedTotal = (id) => {\r\n    const owned = client.readQuery({ query: MY_POKEMON_LIST });\r\n    if (owned === null) return 0;\r\n    \r\n    return owned.pokemons.filter((mp) => mp.id === id).length;\r\n  };\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <ContainerCard>\r\n      {data.pokemons.results.map((pokemon, index) => {\r\n        return (\r\n          <Card\r\n            onClick={() =>\r\n              history.push({\r\n                pathname: `/pokemon-detail/${pokemon.name}`,\r\n                state: {\r\n                  image: pokemon.image,\r\n                  id: index,\r\n                },\r\n              })\r\n            }\r\n          >\r\n            <img src={pokemon.image} />\r\n            <h3>{toCamelCase(pokemon.name)}</h3>\r\n            <span>owned: {ownedTotal(index)}</span>\r\n          </Card>\r\n        );\r\n      })}\r\n    </ContainerCard>\r\n  );\r\n}\r\n\r\nexport default PokemonListPage;\r\n","import { Button as Container } from '../styles/styles';\r\n\r\nfunction Button(props) {\r\n  return (\r\n    <Container onClick={props.onClick}>\r\n      <span>{props.children}</span>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport { useQuery, InMemoryCache } from '@apollo/client';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { toCamelCase } from '../utils/globalFunction';\r\nimport { POKEMON_DETAIL, MY_POKEMON_LIST } from '../graphql/query/pokemons';\r\n\r\nimport Button from '../components/button';\r\nimport client from '../graphql/client/client';\r\nimport { Loading, PokemonDetail } from '../styles/styles';\r\n\r\nfunction PokemonDetailPage() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [probability, setProbability] = useState(0);\r\n  const pokemon = location.pathname.split('/')[2];\r\n  const { loading, data } = useQuery(POKEMON_DETAIL, {\r\n    variables: {\r\n      name: pokemon,\r\n    },\r\n  });\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  const p = data.pokemon;\r\n  return (\r\n    <PokemonDetail>\r\n      <img src={location.state.image} />\r\n      <span>{toCamelCase(p.name)}</span>\r\n      <div>Probability {`${probability}%`}</div>\r\n      <Button\r\n        onClick={() => {\r\n          if (probability < 90) {\r\n            setProbability(probability + 10);\r\n          }\r\n\r\n          if (probability > 50) {\r\n            let pokemonName = prompt('Enter your pokemon name: ');\r\n            const oldData = client.readQuery({ query: MY_POKEMON_LIST });\r\n\r\n            let pokemon = {\r\n              id: location.state.id,\r\n              name: pokemonName,\r\n              image: location.state.image,\r\n            };\r\n\r\n            if (oldData === null) {\r\n              client.writeQuery({\r\n                query: MY_POKEMON_LIST,\r\n                data: {\r\n                  pokemons: [pokemon],\r\n                },\r\n              });\r\n              history.push({\r\n                pathname: '/my-pokemon',\r\n                state: {\r\n                  name: p.name,\r\n                },\r\n              });\r\n            } else {\r\n              oldData.pokemons.forEach((pk) => {\r\n                if (pk.name === pokemonName) {\r\n                  pokemonName = prompt(\r\n                    'Name already exist !, Enter another pokemon name: ',\r\n                  );\r\n                }\r\n              });\r\n              pokemon = {\r\n                id: location.state.id,\r\n                name: pokemonName,\r\n                image: location.state.image,\r\n              };\r\n\r\n              client.writeQuery({\r\n                query: MY_POKEMON_LIST,\r\n                data: {\r\n                  pokemons: [...oldData.pokemons, pokemon],\r\n                },\r\n              });\r\n              history.push({\r\n                pathname: '/my-pokemon',\r\n                state: {\r\n                  name: p.name,\r\n                },\r\n              });\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        CATCH\r\n      </Button>\r\n      {/* Profile */}\r\n      <div className=\"label\">\r\n        <span>Profile</span>\r\n      </div>\r\n      <div className=\"section\">\r\n        <div className=\"monster-profile\">\r\n          <strong>Height: </strong> <span>{p.height}</span>\r\n          <strong style={{ textAlign: 'right' }}>Weight: </strong>{' '}\r\n          <span style={{ textAlign: 'right' }}>{p.weight}</span>\r\n        </div>\r\n        <div className=\"monster-profile\">\r\n          <strong>Abilities: </strong>{' '}\r\n          <div className=\"ability\">\r\n            {p.abilities.map((ab) => {\r\n              return <span>{ab.ability.name}</span>;\r\n            })}\r\n          </div>\r\n          <strong style={{ textAlign: 'right' }}>Remain </strong>{' '}\r\n          <span style={{ textAlign: 'right' }}>{p.base_experience}</span>\r\n        </div>\r\n      </div>\r\n      {/* Moves */}\r\n      <div className=\"label\">\r\n        <span>Moves</span>\r\n      </div>\r\n      <div className=\"monster-move\">\r\n        {p.moves.map((move) => {\r\n          return <span>{move.move.name}</span>;\r\n        })}\r\n      </div>\r\n    </PokemonDetail>\r\n  );\r\n}\r\n\r\nexport default PokemonDetailPage;\r\n","import { ContainerCard, Card } from '../styles/styles';\r\nimport client from '../graphql/client/client';\r\nimport { toCamelCase } from '../utils/globalFunction';\r\nimport { MY_POKEMON_LIST } from '../graphql/query/pokemons';\r\n\r\nfunction MyPokemonListPage() {\r\n  const data = client.readQuery({ query: MY_POKEMON_LIST });\r\n\r\n  if (data === null) {\r\n    return (\r\n      <h2 style={{ color: '#f15a29', textAlign: 'center', marginTop: '70px' }}>\r\n        You don't have a pokemon yet.\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ContainerCard>\r\n      {data.pokemons.map((pokemon) => {\r\n        return (\r\n          <Card>\r\n            <img src={pokemon.image} />\r\n            <h3>{toCamelCase(pokemon.name)}</h3>\r\n          </Card>\r\n        );\r\n      })}\r\n    </ContainerCard>\r\n  );\r\n}\r\n\r\nexport default MyPokemonListPage;\r\n","export default __webpack_public_path__ + \"static/media/arrowLeft.0f82b517.svg\";","import { useLocation, useHistory } from 'react-router-dom';\r\nimport { Header, Back } from '../styles/styles';\r\n\r\nimport ArrowLeftIcon from '../assets/img/arrowLeft.svg';\r\n\r\nfunction Navbar() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const title = location.pathname.toLowerCase().split('/');\r\n  const headerText = () => {\r\n    if (title[1] === '') return <h2>POKEMON LIST</h2>;\r\n    if (title[1] === 'pokemon-detail') return <h2>POKEMON DETAIL</h2>;\r\n    if (title[1] === 'my-pokemon') return <h2>MY POKEMON LIST</h2>;\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      {title[1] === 'pokemon-detail' && (\r\n        <Back onClick={() => history.goBack()}>\r\n          <img src={ArrowLeftIcon} />\r\n        </Back>\r\n      )}\r\n      {headerText()}\r\n    </Header>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { Footer as Container } from '../styles/styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Container>\r\n      <Link to='/' className=\"link\">\r\n        <span>HOME</span>\r\n      </Link>\r\n      <div className=\"line-up\" />\r\n      <Link to='/my-pokemon' className=\"link\">\r\n        <span>MY POKEMON</span>\r\n      </Link>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import {\n  BrowserRouter as Router,\n  HashRouter,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport Client from './graphql/client/client';\n\nimport PokemonListPage from './pages/PokemonListPage';\nimport PokemonDetailPage from './pages/PokemonDetailPage';\nimport MyPokemonDetailPage from './pages/MyPokemonListPage';\n\nimport Header from './components/header';\nimport Footer from './components/footer'\n\nimport { Container } from './styles/styles';\n\nfunction App() {\n  return (\n    <ApolloProvider client={Client}>\n      <Router history={HashRouter}>\n        <Container>\n          <Header />\n          <Switch>\n            <Route exact path=\"/\" component={PokemonListPage} />\n            <Route path=\"/pokemon-detail/:name\" component={PokemonDetailPage} />\n            <Route path=\"/my-pokemon\" component={MyPokemonDetailPage} />\n          </Switch>\n          <Footer />\n        </Container>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}