[{"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\App.js":"1","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\index.js":"2","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\pages\\PokemonListPage.js":"3","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\pages\\PokemonDetailPage.js":"4","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\pages\\MyPokemonListPage.js":"5","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\styles\\styles.js":"6","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\reportWebVitals.js":"7","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\components\\header.js":"8","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\graphql\\query\\pokemons.js":"9","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\utils\\globalFunction.js":"10","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\components\\footer.js":"11","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\components\\button.js":"12","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\graphql\\client\\client.js":"13","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\constant\\config.js":"14"},{"size":1013,"mtime":1611204111296,"results":"15","hashOfConfig":"16"},{"size":500,"mtime":1609911082695,"results":"17","hashOfConfig":"16"},{"size":1445,"mtime":1611200749925,"results":"18","hashOfConfig":"16"},{"size":3919,"mtime":1611199555115,"results":"19","hashOfConfig":"16"},{"size":818,"mtime":1611200116921,"results":"20","hashOfConfig":"16"},{"size":3550,"mtime":1611193861740,"results":"21","hashOfConfig":"16"},{"size":362,"mtime":1609911082695,"results":"22","hashOfConfig":"16"},{"size":775,"mtime":1611161270803,"results":"23","hashOfConfig":"16"},{"size":1116,"mtime":1611194764107,"results":"24","hashOfConfig":"16"},{"size":79,"mtime":1611197735891,"results":"25","hashOfConfig":"16"},{"size":403,"mtime":1611192635409,"results":"26","hashOfConfig":"16"},{"size":228,"mtime":1611193684374,"results":"27","hashOfConfig":"16"},{"size":234,"mtime":1611197062255,"results":"28","hashOfConfig":"16"},{"size":88,"mtime":1611139237459,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1djw3eu",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\App.js",[],"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\index.js",[],["64","65"],"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\pages\\PokemonListPage.js",["66","67"],"import { useQuery } from '@apollo/client';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { toCamelCase } from '../utils/globalFunction';\r\nimport client from '../graphql/client/client';\r\nimport { POKEMON_LIST, MY_POKEMON_LIST } from '../graphql/query/pokemons';\r\n\r\nimport { Loading, Card, ContainerCard } from '../styles/styles';\r\n\r\nfunction PokemonListPage() {\r\n  const history = useHistory();\r\n  const { loading, data, error } = useQuery(POKEMON_LIST, {\r\n    variables: {\r\n      limit: 200,\r\n      offset: 1,\r\n    },\r\n  });\r\n\r\n  const ownedTotal = (id) => {\r\n    const owned = client.readQuery({ query: MY_POKEMON_LIST });\r\n    if (owned === null) return 0;\r\n    \r\n    return owned.pokemons.filter((mp) => mp.id === id).length;\r\n  };\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  return (\r\n    <ContainerCard>\r\n      {data.pokemons.results.map((pokemon, index) => {\r\n        return (\r\n          <Card\r\n            onClick={() =>\r\n              history.push({\r\n                pathname: `/pokemon-detail/${pokemon.name}`,\r\n                state: {\r\n                  image: pokemon.image,\r\n                  id: index,\r\n                },\r\n              })\r\n            }\r\n          >\r\n            <img src={pokemon.image} />\r\n            <h3>{toCamelCase(pokemon.name)}</h3>\r\n            <span>owned: {ownedTotal(index)}</span>\r\n          </Card>\r\n        );\r\n      })}\r\n    </ContainerCard>\r\n  );\r\n}\r\n\r\nexport default PokemonListPage;\r\n","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\pages\\PokemonDetailPage.js",["68","69"],"import React, { useState } from 'react';\r\nimport { useQuery, InMemoryCache } from '@apollo/client';\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\nimport { toCamelCase } from '../utils/globalFunction';\r\nimport { POKEMON_DETAIL, MY_POKEMON_LIST } from '../graphql/query/pokemons';\r\n\r\nimport Button from '../components/button';\r\nimport client from '../graphql/client/client';\r\nimport { Loading, PokemonDetail } from '../styles/styles';\r\n\r\nfunction PokemonDetailPage() {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const [probability, setProbability] = useState(0);\r\n  const pokemon = location.pathname.split('/')[2];\r\n  const { loading, data } = useQuery(POKEMON_DETAIL, {\r\n    variables: {\r\n      name: pokemon,\r\n    },\r\n  });\r\n\r\n  if (loading) return <Loading />;\r\n\r\n  const p = data.pokemon;\r\n  return (\r\n    <PokemonDetail>\r\n      <img src={location.state.image} />\r\n      <span>{toCamelCase(p.name)}</span>\r\n      <div>Probability {`${probability}%`}</div>\r\n      <Button\r\n        onClick={() => {\r\n          if (probability < 90) {\r\n            setProbability(probability + 10);\r\n          }\r\n\r\n          if (probability > 50) {\r\n            let pokemonName = prompt('Enter your pokemon name: ');\r\n            const oldData = client.readQuery({ query: MY_POKEMON_LIST });\r\n\r\n            let pokemon = {\r\n              id: location.state.id,\r\n              name: pokemonName,\r\n              image: location.state.image,\r\n            };\r\n\r\n            if (oldData === null) {\r\n              client.writeQuery({\r\n                query: MY_POKEMON_LIST,\r\n                data: {\r\n                  pokemons: [pokemon],\r\n                },\r\n              });\r\n              history.push({\r\n                pathname: '/my-pokemon',\r\n                state: {\r\n                  name: p.name,\r\n                },\r\n              });\r\n            } else {\r\n              oldData.pokemons.forEach((pk) => {\r\n                if (pk.name === pokemonName) {\r\n                  pokemonName = prompt(\r\n                    'Name already exist !, Enter another pokemon name: ',\r\n                  );\r\n                }\r\n              });\r\n              pokemon = {\r\n                id: location.state.id,\r\n                name: pokemonName,\r\n                image: location.state.image,\r\n              };\r\n\r\n              client.writeQuery({\r\n                query: MY_POKEMON_LIST,\r\n                data: {\r\n                  pokemons: [...oldData.pokemons, pokemon],\r\n                },\r\n              });\r\n              history.push({\r\n                pathname: '/my-pokemon',\r\n                state: {\r\n                  name: p.name,\r\n                },\r\n              });\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        CATCH\r\n      </Button>\r\n      {/* Profile */}\r\n      <div className=\"label\">\r\n        <span>Profile</span>\r\n      </div>\r\n      <div className=\"section\">\r\n        <div className=\"monster-profile\">\r\n          <strong>Height: </strong> <span>{p.height}</span>\r\n          <strong style={{ textAlign: 'right' }}>Weight: </strong>{' '}\r\n          <span style={{ textAlign: 'right' }}>{p.weight}</span>\r\n        </div>\r\n        <div className=\"monster-profile\">\r\n          <strong>Abilities: </strong>{' '}\r\n          <div className=\"ability\">\r\n            {p.abilities.map((ab) => {\r\n              return <span>{ab.ability.name}</span>;\r\n            })}\r\n          </div>\r\n          <strong style={{ textAlign: 'right' }}>Remain </strong>{' '}\r\n          <span style={{ textAlign: 'right' }}>{p.base_experience}</span>\r\n        </div>\r\n      </div>\r\n      {/* Moves */}\r\n      <div className=\"label\">\r\n        <span>Moves</span>\r\n      </div>\r\n      <div className=\"monster-move\">\r\n        {p.moves.map((move) => {\r\n          return <span>{move.move.name}</span>;\r\n        })}\r\n      </div>\r\n    </PokemonDetail>\r\n  );\r\n}\r\n\r\nexport default PokemonDetailPage;\r\n","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\pages\\MyPokemonListPage.js",["70","71","72"],"import { ContainerCard, Card } from '../styles/styles';\r\nimport client from '../graphql/client/client';\r\nimport { toCamelCase } from '../utils/globalFunction';\r\nimport { MY_POKEMON_LIST } from '../graphql/query/pokemons';\r\n\r\nfunction MyPokemonListPage() {\r\n  const data = client.readQuery({ query: MY_POKEMON_LIST });\r\n\r\n  if (data === null) {\r\n    return (\r\n      <h2 style={{ color: '#f15a29', textAlign: 'center', marginTop: '70px' }}>\r\n        You don't have a pokemon yet.\r\n      </h2>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ContainerCard>\r\n      {data.pokemons.map((pokemon) => {\r\n        return (\r\n          <Card>\r\n            <img src={pokemon.image} />\r\n            <h3>{toCamelCase(pokemon.name)}</h3>\r\n          </Card>\r\n        );\r\n      })}\r\n    </ContainerCard>\r\n  );\r\n}\r\n\r\nexport default MyPokemonListPage;\r\n","C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\styles\\styles.js",[],"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\reportWebVitals.js",[],"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\components\\header.js",["73"],"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\graphql\\query\\pokemons.js",[],"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\utils\\globalFunction.js",[],"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\components\\footer.js",["74","75"],"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\components\\button.js",[],["76","77"],"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\graphql\\client\\client.js",[],"C:\\Users\\LATITUDE\\Desktop\\pokedex\\src\\constant\\config.js",["78"],"export default {\r\n\tAPI_ENDPOINT: 'https://graphql-pokeapi.vercel.app/api/graphql',\r\n};\r\n",{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":11,"column":26,"nodeType":"85","messageId":"86","endLine":11,"endColumn":31},{"ruleId":"87","severity":1,"message":"88","line":42,"column":13,"nodeType":"89","endLine":42,"endColumn":40},{"ruleId":"83","severity":1,"message":"90","line":2,"column":20,"nodeType":"85","messageId":"86","endLine":2,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":27,"column":7,"nodeType":"89","endLine":27,"endColumn":41},{"ruleId":"83","severity":1,"message":"91","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":21},{"ruleId":"83","severity":1,"message":"92","line":3,"column":23,"nodeType":"85","messageId":"86","endLine":3,"endColumn":33},{"ruleId":"87","severity":1,"message":"88","line":23,"column":13,"nodeType":"89","endLine":23,"endColumn":40},{"ruleId":"87","severity":1,"message":"88","line":20,"column":6,"nodeType":"89","endLine":20,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":8,"column":9,"nodeType":"89","endLine":8,"endColumn":12},{"ruleId":"93","severity":1,"message":"94","line":12,"column":9,"nodeType":"89","endLine":12,"endColumn":12},{"ruleId":"79","replacedBy":"95"},{"ruleId":"81","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":1,"nodeType":"99","endLine":3,"endColumn":3},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'InMemoryCache' is defined but never used.","'useLocation' is defined but never used.","'useHistory' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["100"],["101"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]